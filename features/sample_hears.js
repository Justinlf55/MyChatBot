/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
module.exports = function(controller) {

    // use a function to match a condition in the message
    // controller.hears(async (message) => message.text && message.text.toLowerCase() === 'foo', ['message'], async (bot, message) => {
    //     await bot.reply(message, 'I heard "foo" via a function test');
    // });

    // use a regular expression to match the text of the message
    // controller.hears(new RegExp(/^\d+$/), ['message','direct_message'], async function(bot, message) {
    //     await bot.reply(message,{ text: 'I heard a number using a regular expression.' });
    // });

    // match any one of set of mixed patterns like a string, a regular expression
    controller.hears(['allcaps', new RegExp(/^[A-Z\s]+$/)], ['message','direct_message'], async function(bot, message) {
        await bot.reply(message,{ text: 'PLEASE DO NO T YELL AT ME!!!!!!' });
    });

    controller.hears('Hello bot','message',async(bot, message) => {
        // do something!
        await bot.reply(message, 'Hello human')
    });

    controller.hears(async (message) => findKeyword(message.text.toLowerCase()) === true, ['message'], async (bot, message) => {
        await bot.reply(message, resume[KEYWORD]);
    });
}

const resume = {
    'education' : 'My creator obtained a B.S. degree in Biology from the University of California, Irvine in 2017 and obtained his technical skills as a software from App Academy in 2019 and 2020',
    'education.' : 'My creator obtained a B.S. degree in Biology from the University of California, Irvine in 2017 and obtained his technical skills as a software from App Academy in 2019 and 2020',
    'education?' : 'My creator obtained a B.S. degree in Biology from the University of California, Irvine in 2017 and obtained his technical skills as a software from App Academy in 2019 and 2020',
    'education!' : 'My creator obtained a B.S. degree in Biology from the University of California, Irvine in 2017 and obtained his technical skills as a software from App Academy in 2019 and 2020',
    'education,' : 'My creator obtained a B.S. degree in Biology from the University of California, Irvine in 2017 and obtained his technical skills as a software from App Academy in 2019 and 2020',
    'skills' : 'My creator is comfortable and proficient in languages and technologies such as React.js, Ruby on Rails, JavaScript, jQuery, Ruby, Redux.js, Python, SQL, MongoDB, Express, Git, HTML5, CSS3.  He is also in the process of learning swift',
    'skills.' : 'My creator is comfortable and proficient in languages and technologies such as React.js, Ruby on Rails, JavaScript, jQuery, Ruby, Redux.js, Python, SQL, MongoDB, Express, Git, HTML5, CSS3.  He is also in the process of learning swift',
    'skills?' : 'My creator is comfortable and proficient in languages and technologies such as React.js, Ruby on Rails, JavaScript, jQuery, Ruby, Redux.js, Python, SQL, MongoDB, Express, Git, HTML5, CSS3.  He is also in the process of learning swift',
    'skills!' : 'My creator is comfortable and proficient in languages and technologies such as React.js, Ruby on Rails, JavaScript, jQuery, Ruby, Redux.js, Python, SQL, MongoDB, Express, Git, HTML5, CSS3.  He is also in the process of learning swift',
    'skills,' : 'My creator is comfortable and proficient in languages and technologies such as React.js, Ruby on Rails, JavaScript, jQuery, Ruby, Redux.js, Python, SQL, MongoDB, Express, Git, HTML5, CSS3.  He is also in the process of learning swift',
    'projects': 'I have three projects to display, a full stack project, which is a Netflix clone, called Newflix, a group project, Monster Mayhem, and a vanilla javascript project, Interdimensional Sniper\n\n Do you want me to elaborate on one of these projects? Which one?',
    'projects.': 'I have three projects to display, a full stack project, which is a Netflix clone, called Newflix, a group project, Monster Mayhem, and a vanilla javascript project, Interdimensional Sniper\n\n Do you want me to elaborate on one of these projects? Which one?',
    'projects?': 'I have three projects to display, a full stack project, which is a Netflix clone, called Newflix, a group project, Monster Mayhem, and a vanilla javascript project, Interdimensional Sniper\n\n Do you want me to elaborate on one of these projects? Which one?',
    'projects!': 'I have three projects to display, a full stack project, which is a Netflix clone, called Newflix, a group project, Monster Mayhem, and a vanilla javascript project, Interdimensional Sniper\n\n Do you want me to elaborate on one of these projects? Which one?',
    'projects,': 'I have three projects to display, a full stack project, which is a Netflix clone, called Newflix, a group project, Monster Mayhem, and a vanilla javascript project, Interdimensional Sniper\n\n Do you want me to elaborate on one of these projects? Which one?',
    'stack': 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'stack.': 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'stack?': 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'stack!': 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'stack,': 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'newflix': 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'newflix.': 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'newflix?': 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'newflix!' : 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'newflix,' : 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'netflix' : 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'netflix.': 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'netflix?': 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'netflix!' : 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'netflix,' : 'Newflix is a full stack application developed with React.js / Redux.js, Ruby on Rails, postgreSQL, CSS3, AWS S3.  The frontend heavily relies on React components and functions that specify app activity based on local state changes and specified algorithms to mimic Netflix’s interactive and animated UX/UI.  The front and backend connect through ajax calls through a REST Api. The backend is managed through a Ruby on Rails framework, which queries a postgreSQL database.  I developed backend associations and methods in chosen rails model files to automatically store images and videos to AWS S3, easing server load and scaling by hosting media on a cloud storage',
    'group' : 'As the frontend lead on Monster Mayhem, I integrated Axios to the express.js backend and Javascript promises to pull information from MongoDB, using Redux’s mapStateToProps method to pass information into React components for improved UI/UX.  With this information from the backend, I was able to write game logic in the frontend, making live gameplay functional.   Websockets was integrated using the socket.io library to provide a temporary server, allowing for multiplayer experience through joining two players online through matching websocket identification numbers.',
    'group.' : 'As the frontend lead on Monster Mayhem, I integrated Axios to the express.js backend and Javascript promises to pull information from MongoDB, using Redux’s mapStateToProps method to pass information into React components for improved UI/UX.  With this information from the backend, I was able to write game logic in the frontend, making live gameplay functional.   Websockets was integrated using the socket.io library to provide a temporary server, allowing for multiplayer experience through joining two players online through matching websocket identification numbers.',
    'group?' : 'As the frontend lead on Monster Mayhem, I integrated Axios to the express.js backend and Javascript promises to pull information from MongoDB, using Redux’s mapStateToProps method to pass information into React components for improved UI/UX.  With this information from the backend, I was able to write game logic in the frontend, making live gameplay functional.   Websockets was integrated using the socket.io library to provide a temporary server, allowing for multiplayer experience through joining two players online through matching websocket identification numbers.',
    'group!' : 'As the frontend lead on Monster Mayhem, I integrated Axios to the express.js backend and Javascript promises to pull information from MongoDB, using Redux’s mapStateToProps method to pass information into React components for improved UI/UX.  With this information from the backend, I was able to write game logic in the frontend, making live gameplay functional.   Websockets was integrated using the socket.io library to provide a temporary server, allowing for multiplayer experience through joining two players online through matching websocket identification numbers.',
    'group,' : 'As the frontend lead on Monster Mayhem, I integrated Axios to the express.js backend and Javascript promises to pull information from MongoDB, using Redux’s mapStateToProps method to pass information into React components for improved UI/UX.  With this information from the backend, I was able to write game logic in the frontend, making live gameplay functional.   Websockets was integrated using the socket.io library to provide a temporary server, allowing for multiplayer experience through joining two players online through matching websocket identification numbers.',
    'monster' : 'As the frontend lead on Monster Mayhem, I integrated Axios to the express.js backend and Javascript promises to pull information from MongoDB, using Redux’s mapStateToProps method to pass information into React components for improved UI/UX.  With this information from the backend, I was able to write game logic in the frontend, making live gameplay functional.   Websockets was integrated using the socket.io library to provide a temporary server, allowing for multiplayer experience through joining two players online through matching websocket identification numbers.',
    'monster.' : 'As the frontend lead on Monster Mayhem, I integrated Axios to the express.js backend and Javascript promises to pull information from MongoDB, using Redux’s mapStateToProps method to pass information into React components for improved UI/UX.  With this information from the backend, I was able to write game logic in the frontend, making live gameplay functional.   Websockets was integrated using the socket.io library to provide a temporary server, allowing for multiplayer experience through joining two players online through matching websocket identification numbers.',
    'monster?' : 'As the frontend lead on Monster Mayhem, I integrated Axios to the express.js backend and Javascript promises to pull information from MongoDB, using Redux’s mapStateToProps method to pass information into React components for improved UI/UX.  With this information from the backend, I was able to write game logic in the frontend, making live gameplay functional.   Websockets was integrated using the socket.io library to provide a temporary server, allowing for multiplayer experience through joining two players online through matching websocket identification numbers.',
    'monster!' : 'As the frontend lead on Monster Mayhem, I integrated Axios to the express.js backend and Javascript promises to pull information from MongoDB, using Redux’s mapStateToProps method to pass information into React components for improved UI/UX.  With this information from the backend, I was able to write game logic in the frontend, making live gameplay functional.   Websockets was integrated using the socket.io library to provide a temporary server, allowing for multiplayer experience through joining two players online through matching websocket identification numbers.',
    'monster,' : 'As the frontend lead on Monster Mayhem, I integrated Axios to the express.js backend and Javascript promises to pull information from MongoDB, using Redux’s mapStateToProps method to pass information into React components for improved UI/UX.  With this information from the backend, I was able to write game logic in the frontend, making live gameplay functional.   Websockets was integrated using the socket.io library to provide a temporary server, allowing for multiplayer experience through joining two players online through matching websocket identification numbers.',
    'Interdimensional' : 'This vanilla.js project is a mouse click shooter game. I applied trigonometry principles to calculate specific angles of laser path when shooting enemies on a canvas x, y graph.  Object oriented programming is used (classes and object attributes) to manipulate built in canvas methods such as beginPath, fillRect, rect, and closePath to create custom health bars for each enemy spawned into the game. Sprites are used for animated character through logic, which tracks key position on the canvas graphs that are correlated to a specific sprite.',
    'Interdimensional.' : 'This vanilla.js project is a mouse click shooter game. I applied trigonometry principles to calculate specific angles of laser path when shooting enemies on a canvas x, y graph.  Object oriented programming is used (classes and object attributes) to manipulate built in canvas methods such as beginPath, fillRect, rect, and closePath to create custom health bars for each enemy spawned into the game. Sprites are used for animated character through logic, which tracks key position on the canvas graphs that are correlated to a specific sprite.',
    'Interdimensional?' : 'This vanilla.js project is a mouse click shooter game. I applied trigonometry principles to calculate specific angles of laser path when shooting enemies on a canvas x, y graph.  Object oriented programming is used (classes and object attributes) to manipulate built in canvas methods such as beginPath, fillRect, rect, and closePath to create custom health bars for each enemy spawned into the game. Sprites are used for animated character through logic, which tracks key position on the canvas graphs that are correlated to a specific sprite.',
    'Interdimensional!' : 'This vanilla.js project is a mouse click shooter game. I applied trigonometry principles to calculate specific angles of laser path when shooting enemies on a canvas x, y graph.  Object oriented programming is used (classes and object attributes) to manipulate built in canvas methods such as beginPath, fillRect, rect, and closePath to create custom health bars for each enemy spawned into the game. Sprites are used for animated character through logic, which tracks key position on the canvas graphs that are correlated to a specific sprite.',
    'Interdimensional,' : 'This vanilla.js project is a mouse click shooter game. I applied trigonometry principles to calculate specific angles of laser path when shooting enemies on a canvas x, y graph.  Object oriented programming is used (classes and object attributes) to manipulate built in canvas methods such as beginPath, fillRect, rect, and closePath to create custom health bars for each enemy spawned into the game. Sprites are used for animated character through logic, which tracks key position on the canvas graphs that are correlated to a specific sprite.',
    'history' : 'As an undergratuate I had a premedical internship at Spinal Diagnostics in the summers from 2014 to 2016.  Here, I observed spinal surgeries such as nerve-root ablations, cortisone injections and platelet-rich plasma injections.  Also, I assisted nurses with patient admissions and surgery prep procedures and recovery nurses with patient IV removals and overall patient recovery process.\n\n From December 2017 to September 2019, I worked as a Case Manager at Genentech where I provided necessary assistance to 50 - 70 patients in need of pharmaceuticals a day. I acted as the liaison between hospital, insurance provider and patient to ensure approval of medications. And, extensively consulted with uninsured patients to find ways of approval and financial assistance',
    'history.' : 'As an undergratuate I had a premedical internship at Spinal Diagnostics in the summers from 2014 to 2016.  Here, I observed spinal surgeries such as nerve-root ablations, cortisone injections and platelet-rich plasma injections.  Also, I assisted nurses with patient admissions and surgery prep procedures and recovery nurses with patient IV removals and overall patient recovery process.\n\n From December 2017 to September 2019, I worked as a Case Manager at Genentech where I provided necessary assistance to 50 - 70 patients in need of pharmaceuticals a day. I acted as the liaison between hospital, insurance provider and patient to ensure approval of medications. And, extensively consulted with uninsured patients to find ways of approval and financial assistance',
    'history?' : 'As an undergratuate I had a premedical internship at Spinal Diagnostics in the summers from 2014 to 2016.  Here, I observed spinal surgeries such as nerve-root ablations, cortisone injections and platelet-rich plasma injections.  Also, I assisted nurses with patient admissions and surgery prep procedures and recovery nurses with patient IV removals and overall patient recovery process.\n\n From December 2017 to September 2019, I worked as a Case Manager at Genentech where I provided necessary assistance to 50 - 70 patients in need of pharmaceuticals a day. I acted as the liaison between hospital, insurance provider and patient to ensure approval of medications. And, extensively consulted with uninsured patients to find ways of approval and financial assistance',
    'history!' : 'As an undergratuate I had a premedical internship at Spinal Diagnostics in the summers from 2014 to 2016.  Here, I observed spinal surgeries such as nerve-root ablations, cortisone injections and platelet-rich plasma injections.  Also, I assisted nurses with patient admissions and surgery prep procedures and recovery nurses with patient IV removals and overall patient recovery process.\n\n From December 2017 to September 2019, I worked as a Case Manager at Genentech where I provided necessary assistance to 50 - 70 patients in need of pharmaceuticals a day. I acted as the liaison between hospital, insurance provider and patient to ensure approval of medications. And, extensively consulted with uninsured patients to find ways of approval and financial assistance',
    'history,' : 'As an undergratuate I had a premedical internship at Spinal Diagnostics in the summers from 2014 to 2016.  Here, I observed spinal surgeries such as nerve-root ablations, cortisone injections and platelet-rich plasma injections.  Also, I assisted nurses with patient admissions and surgery prep procedures and recovery nurses with patient IV removals and overall patient recovery process.\n\n From December 2017 to September 2019, I worked as a Case Manager at Genentech where I provided necessary assistance to 50 - 70 patients in need of pharmaceuticals a day. I acted as the liaison between hospital, insurance provider and patient to ensure approval of medications. And, extensively consulted with uninsured patients to find ways of approval and financial assistance',
    'contact' : 'Here is my contact information:\n\n email: justinlfern@gmail.com\n\n LinkedIn: https://www.linkedin.com/in/justin-fernandez-7a4727122/',
    'contact.' : 'Here is my contact information:\n\n email: justinlfern@gmail.com\n\n LinkedIn: https://www.linkedin.com/in/justin-fernandez-7a4727122/',
    'contact?' : 'Here is my contact information:\n\n email: justinlfern@gmail.com\n\n LinkedIn: https://www.linkedin.com/in/justin-fernandez-7a4727122/',
    'contact!' : 'Here is my contact information:\n\n email: justinlfern@gmail.com\n\n LinkedIn: https://www.linkedin.com/in/justin-fernandez-7a4727122/',
    'contact,' : 'Here is my contact information:\n\n email: justinlfern@gmail.com\n\n LinkedIn: https://www.linkedin.com/in/justin-fernandez-7a4727122/',
}

let KEYWORD;
function findKeyword(message) {
    message = message.split(' ');
    let keys = Object.keys(resume);
    for (let key of keys) {
        if (message.includes(key)) {
            KEYWORD = key;
            return true;
        }
    }
    return false;
}
